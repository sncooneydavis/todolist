{"version":3,"file":"app.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AAC0G;AACjB;AACzF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA,UAAU,OAAO,iFAAiF,iFAAiF,mBAAmB;AACtM;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;ACR1B;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;ACfa;;AAEb;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnFa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;AACjF;AACA;AACA;AACA;AACA;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5Da;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;;;;WCrBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA,MAA+F;AAC/F,MAAqF;AACrF,MAA4F;AAC5F,MAA+G;AAC/G,MAAwG;AACxG,MAAwG;AACxG,MAAkM;AAClM;AACA;;AAEA;;AAEA,4BAA4B,6BAAmB;AAC/C,wBAAwB,0CAAa;AACrC,iBAAiB,+BAAa;AAC9B,iBAAiB,uBAAM;AACvB,6BAA6B,8BAAkB;;AAE/C,aAAa,kCAAG,CAAC,qBAAO;;;;AAI4I;AACpK,OAAO,iDAAe,qBAAO,IAAI,qBAAO,UAAU,qBAAO,mBAAmB,EAAC;;;ACxB7E;AACA,yCAAyC,kEAAoF;AAC7H,yCAAyC,iEAAoF;AAC7H,yCAAyC,kEAA4D;AACrG,yCAAyC,kEAAmF;AAC5H,yCAAyC,kEAAqF;AAC9H,yCAAyC,kEAAoF;AAC7H,yCAAyC,kEAAkF;AAC3H,yCAAyC,kEAAyF;AAClI,yCAAyC,kEAAuF;AAChI,yCAAyC,kEAA6E;AACtH,0CAA0C,kEAAgF;AAC1H,0CAA0C,iEAAsF;AAChI;AACA,2QAA2Q,2BAA2B,+BAA+B,2BAA2B,yBAAyB,2BAA2B,oIAAoI,2BAA2B,uFAAuF,2BAA2B,+CAA+C,2BAA2B,iGAAiG,2BAA2B,+CAA+C,2BAA2B,uGAAuG,2BAA2B,+CAA+C,2BAA2B,kMAAkM,2BAA2B,0fAA0f,2BAA2B,4HAA4H,4BAA4B,kKAAkK,4BAA4B;AACzsE;AACA,gDAAe,IAAI;;AChBnB;AACA,IAAI,sCAA0B,WAAW,kEAAyC;AAClF,IAAI,sCAA0B,WAAW,kEAAwC;AACjF,IAAI,sCAA0B,WAAW,kEAAkC;AAC3E,IAAI,sCAA0B,WAAW,kEAAoC;AAC7E,IAAI,sCAA0B,WAAW,kEAAiC;AAC1E;AACA,IAAI,qBAAI,+mBAA+mB,sCAA0B,CAAC,4GAA4G,sCAA0B,CAAC,yGAAyG,sCAA0B,CAAC,kCAAkC,sCAA0B,CAAC,+pCAA+pC,sCAA0B,CAAC,oUAAoU,sCAA0B,CAAC;AACn/E;AACA,uDAAe,qBAAI;;ACTnB;AACA,IAAI,qBAAI;AACR;AACA,uDAAe,qBAAI;;ACHnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;ACvN8C;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA,0CAA0C,mBAAmB;AAC7D,gBAAgB,mBAAmB;;AAEnC;;AAEA;AACA;;AAEA;AACA,6DAAe,6DAAa,IAAC;;;ACjDsB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,SAAS,aAAa;AACtB;;AAEA;AACA,sDAAe,sDAAM,IAAC;;;AC9Ce;;AAErC;AACA,QAAQ,cAAc;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,MAAM;AACf;;AAEA;AACA,sDAAe,sDAAM,IAAC;;;AC7B6B;AACd;;AAErC;AACA,QAAQ,sBAAsB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,MAAM;AACtB;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;;AAEA;AACA,8DAAe,8DAAc,IAAC;;;ACpC9B;AACA,IAAI,oBAAI;AACR;AACA,sDAAe,oBAAI;;ACHnB;AACA;AACkD;AACsB;;AAExE;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,GAAG,mBAAmB,GAAG,SAAS;AACrD;AACA,wDAAwD,eAAe;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB,GAAG,eAAe,GAAG,SAAS;AAC1D;AACA,wDAAwD,eAAe;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,GAAG,eAAe,GAAG,yCAAyC;AACjF;AACA,wDAAwD,eAAe;AACvE;AACA;;AAEe;AACf;AACA,+BAA+B,eAAY;AAC3C;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA,qBAAqB,6BAA6B;AAClD,QAAQ;AACR;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA,wBAAwB,mBAAmB;AAC3C;;AAEA;AACA,0BAA0B,MAAM;AAChC;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;;AAEA;AACA,8BAA8B,cAAc;AAC5C,kBAAkB,0BAA0B;AAC5C;AACA,4DAA4D,EAAE,IAAI,EAAE;AACpE;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;ACvIA;AACA;AAC4F;AACI;AAClC;;AAE/C;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,gBAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,gBAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChYA;AACA,IAAI,mCAA0B,WAAW,kEAAkC;AAC3E,IAAI,mCAA0B,WAAW,kEAAoC;AAC7E;AACA,IAAI,kBAAI,8HAA8H,mCAA0B,CAAC,mGAAmG,mCAA0B,CAAC;AAC/R;AACA,oDAAe,kBAAI;;ACNnB;AACA,IAAI,qBAAI;AACR;AACA,uDAAe,qBAAI;;ACHnB;AACA;AACsC;AACoD;AACM;;AAEjF;AACf;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,aAAQ;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D,YAAY;AACxE,MAAM;AACN;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,gBAAW;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AC7PA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,2BAA2B;AAC3C,gCAAgC,+BAA+B;AAC/D;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA,gCAAgC,+BAA+B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,gBAAgB,kCAAkC;AAClD,gCAAgC,+BAA+B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,gBAAgB,iDAAiD;AACjE,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;ACzMA;AACA;AACA;AAC6C;;AAE9B;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ;AAC1D;AACA;AACA;AACA;AACA,oDAAoD,QAAQ,SAAS;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;;AChUA;AACA;;AAE4C;AACM;AACe;;AAElD;AACf;AACA;AACA,4BAA4B,YAAY;AACxC;AACA,wBAAwB,QAAQ;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnLA;AACsB;AACqC;AACU;;AAErE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,iDAAiD,SAAgB;AACjE;AACA,UAAU,mBAAmB;AAC7B,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;;AAEA","sources":["webpack://todolist/./src/styles.css?9d7f","webpack://todolist/./node_modules/css-loader/dist/runtime/api.js","webpack://todolist/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://todolist/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://todolist/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://todolist/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://todolist/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://todolist/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://todolist/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://todolist/webpack/bootstrap","webpack://todolist/webpack/runtime/compat get default export","webpack://todolist/webpack/runtime/define property getters","webpack://todolist/webpack/runtime/global","webpack://todolist/webpack/runtime/hasOwnProperty shorthand","webpack://todolist/webpack/runtime/publicPath","webpack://todolist/webpack/runtime/jsonp chunk loading","webpack://todolist/webpack/runtime/nonce","webpack://todolist/./src/styles.css?bb22","webpack://todolist/./src/components/main-page.html","webpack://todolist/./src/components/left-pane/items-views/1.todo-view/2.task-template.html","webpack://todolist/./src/components/left-pane/items-views/1.todo-view/subtask-template.html","webpack://todolist/./node_modules/date-fns/constants.js","webpack://todolist/./node_modules/date-fns/constructFrom.js","webpack://todolist/./node_modules/date-fns/toDate.js","webpack://todolist/./node_modules/date-fns/getDay.js","webpack://todolist/./node_modules/date-fns/getDaysInMonth.js","webpack://todolist/./src/components/left-pane/datetime-picker.html","webpack://todolist/./src/utilities/date-picker.js","webpack://todolist/./src/view/todo-view.js","webpack://todolist/./src/components/left-pane/items-views/1.todo-view/list-template.html","webpack://todolist/./src/components/left-pane/items-views/1.todo-view/sublist-template.html","webpack://todolist/./src/view/list-view.js","webpack://todolist/./src/model/item-classes.js","webpack://todolist/./src/model/todo-model.js","webpack://todolist/./src/controller/todo-panel-control.js","webpack://todolist/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `// extracted by mini-css-extract-plugin\nexport {};`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA;QACQ,CAAA\",\"sourcesContent\":[\"// extracted by mini-css-extract-plugin\\nexport {};\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../assets/images/prospective-left/toolbars/utility-bar-search.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../assets/images/prospective-left/toolbars/utility-bar-filter.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"../assets/images/prospective-left/add.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_3___ = new URL(\"../assets/images/prospective-left/toolbars/drag-view-default.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_4___ = new URL(\"../assets/images/prospective-left/list-dropdown/view-completed.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_5___ = new URL(\"../assets/images/prospective-left/todo-components/all-options.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_6___ = new URL(\"../assets/images/prospective-left/variable-components/habit.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_7___ = new URL(\"../assets/images/prospective-left/variable-components/add-variable.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_8___ = new URL(\"../assets/images/prospective-left/todo-components/time-stopwatch.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_9___ = new URL(\"../assets/images/prospective-left/todo-components/date.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_10___ = new URL(\"../assets/images/prospective-left/toolbars/drag-view-data.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_11___ = new URL(\"../assets/images/prospective-left/toolbars/drag-bottom-settings.svg\", import.meta.url);\n// Module\nvar code = `<div class=\"main container\"> <div id=\"left-pane\"> <div class=\"left container\"> <div id=\"utility-toolbar\" class=\"single-line\"> <input id=\"utility-input\" name=\"utility-input\" type=\"text\"/> <button class=\"utility button inactive\"> <img class=\"hidden\" src=\"${___HTML_LOADER_IMPORT_0___}\"/> <img class=\"hidden\" src=\"${___HTML_LOADER_IMPORT_1___}\"/> <img class=\"\" src=\"${___HTML_LOADER_IMPORT_2___}\"/> </button> </div> <div id=\"left-view-toolbar\"> <button id=\"home-view-button\" type=\"button\"> <img class=\"bigicon inactive\" src=\"${___HTML_LOADER_IMPORT_3___}\"/> </button> <button id=\"todo-view-button\" type=\"button\"> <img class=\"bigicon\" src=\"${___HTML_LOADER_IMPORT_4___}\"/> <img class=\"bigicon options hidden\" src=\"${___HTML_LOADER_IMPORT_5___}\"/> </button> <button id=\"habit-view-button\" type=\"button\"> <img class=\"bigicon inactive\" src=\"${___HTML_LOADER_IMPORT_6___}\"/> <img class=\"bigicon options hidden\" src=\"${___HTML_LOADER_IMPORT_5___}\"/> </button> <button id=\"measurement-view-button\" type=\"button\"> <img class=\"bigicon inactive\" src=\"${___HTML_LOADER_IMPORT_7___}\"/> <img class=\"bigicon options hidden\" src=\"${___HTML_LOADER_IMPORT_5___}\"/> </button> </div> <div id=\"todo-panel\"> </div> <div id=\"timer-panel\" class=\"hidden\"> <button id=\"main-timer-button\" class=\"dragbar-button\" type=\"button\"> <img class=\"bigicon inactive\" src=\"${___HTML_LOADER_IMPORT_8___}\"/> <input class=\"countup hidden\" value=\"00:00\" type=\"time\" step=\"1\" readonly=\"readonly\"/> </button> <button id=\"main-timer-item-button\" class=\"dragbar-button\" class=\"hidden\"> <input id=\"main-timer-item-name\" class=\"\" value=\"task and time here\" type=\"text\" maxlength=\"15\" readonly=\"readonly\"/> </button> </div> </div> <div class=\"dragbar right\"> <div class=\"solid-line\"></div> <div class=\"z-top top\"> <button id=\"calendar-view-button\" class=\"dragbar-button\" type=\"button\"> <img class=\"dragbar-icon\" src=\"${___HTML_LOADER_IMPORT_9___}\"/> </button> <button id=\"data-view-button\" class=\"dragbar-button\" type=\"button\"> <img class=\"dragbar-icon inactive\" src=\"${___HTML_LOADER_IMPORT_10___}\"/> </button> </div> <div class=\"z-top bottom\"> <button id=\"settings-view-button\" class=\"dragbar-button\" type=\"button\"> <img class=\"dragbar-icon inactive\" src=\"${___HTML_LOADER_IMPORT_11___}\"/> </button> </div> </div> </div> <div id=\"right-pane\"> </div> </div>`;\n// Exports\nexport default code;","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./assets/recurring.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./assets/reminder.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"./assets/up.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_3___ = new URL(\"./assets/down.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_4___ = new URL(\"./assets/x.svg\", import.meta.url);\n// Module\nvar code = `<div data-list-id=\"\" data-sublist-id=\"\" data-todo-id=\"\" data-todo-type=\"\" class=\"todo\"> <div class=\"todo-bar\"> <input data-field=\"isCompleted\" class=\"task-checkbox popover hidden\" type=\"checkbox\"/> <div class=\"left\"> <input data-field=\"name\" class=\"todo-title top\" type=\"text\" placeholder=\"add task name\"/> <div class=\"bottom single-line\"> <button class=\"nearest-datetime-button single-line\" type=\"button\"> <input data-field=\"nextSession\" class=\"readonly datetime indicator\" type=\"text\" value=\"\" readonly=\"readonly\"/> </button> <button class=\"cycle-indicator-button hidden\" type=\"button\"> <img class=\"indicator\" src=\"${___HTML_LOADER_IMPORT_0___}\"/> </button> <button class=\"reminder-indicator-button hidden\" type=\"button\"> <img class=\"indicator\" src=\"${___HTML_LOADER_IMPORT_1___}\"/> </button> </div> </div> <button class=\"todo-details-on right\" type=\"button\"> <img class=\"off\" src=\"${___HTML_LOADER_IMPORT_2___}\"/> <img class=\"on hidden\" src=\"${___HTML_LOADER_IMPORT_3___}\"/> </button> </div> <div class=\"todo-edit-dropdown hidden\"> <div class=\"todo-details-dropdown hidden\"> <div class=\"checklist container\"> <div class=\"blank subtask single-line\"> <input class=\"subtask-checkbox\" type=\"checkbox\" disabled=\"disabled\"/> <input class=\"subtask-title blank\" type=\"text\" value=\"\" placeholder=\"click enter to add\"/> </div> <div class=\"extant-subtasks\"></div> </div> <textarea data-field=\"notes\" class=\"notes container\" placeholder=\"Notes\"></textarea> <div class=\"attachment container hidden\"> </div> </div> <div class=\"todo-schedule-dropdown hidden\"> <div class=\"schedule-type-selection single-line\"> <button class=\"datetime-only-button\" type=\"button\"> datetime </button> <button class=\"add-repeat-button\" type=\"button\"> cycle </button> <button class=\"add-deadline-button\" type=\"button\"> deadline </button> </div> <div class=\"schedule-calendar\"> </div> <div class=\"deadline-description hidden\"> </div> <div class=\"scheduled-datetimes-dropdown hidden\"> </div> <div class=\"logged-datetimes-dropdown hidden\"> </div> <div class=\"open-recurring single-line hidden\"> <button class=\"open-recurring-button single-line\" type=\"button\"> <img class=\"icon inactive\" src=\"${___HTML_LOADER_IMPORT_0___}\"/> <span class=\"inactive description\"> set recurrence </span> <div class=\"hidden single-line description\"> <span class=\"hidden\"> repeats </span> <input class=\"recurring-description\" type=\"text\" value=\"\" readonly=\"readonly\"/> </div> </button> <button class=\"clear-recurring-button hidden\"> <img class=\"icon inactive\" src=\"${___HTML_LOADER_IMPORT_4___}\"/> </button> </div> <div class=\"open-reminder single-line hidden\"> </div> </div> <div class=\"bottom-section single-line\"> <button class=\"add-datetime-button left hidden\" type=\"button\"> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"-1 -1 24 24\" id=\"add-datetime-icon\"> <desc>App Window Clock Streamline Icon: https://streamlinehq.com</desc> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.949416666666668 7.565185833333333v-5.5c0 -0.3646775 -0.14483333333333334 -0.7144133333333333 -0.40269166666666667 -0.9722716666666665 -0.2578583333333333 -0.25786291666666666 -0.6076583333333333 -0.4027283333333333 -0.9723083333333332 -0.4027283333333333h-16.5c-0.3646683333333333 0 -0.7144133333333333 0.14486541666666666 -0.9722716666666665 0.4027283333333333C0.8442829999999999 1.3507725 0.6994166666666667 1.7005083333333333 0.6994166666666667 2.0651858333333335V17.190158333333333c0 0.36474166666666663 0.14486633333333335 0.7144499999999999 0.4027283333333333 0.9723083333333332 0.2578583333333333 0.2578583333333333 0.6076033333333333 0.40269166666666667 0.9722716666666665 0.40269166666666667h5.5\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M0.6994166666666667 4.8151858333333335h19.25\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M10.321666666666665 15.815158333333333c0 0.7223333333333334 0.14226666666666665 1.4375166666666666 0.41864166666666663 2.1047583333333333 0.27646666666666664 0.6673333333333333 0.6815416666666667 1.2736166666666666 1.1923083333333333 1.7843833333333334 0.510675 0.510675 1.1170499999999999 0.9158416666666667 1.7842916666666666 1.1922166666666667 0.6673333333333333 0.276375 1.3825166666666666 0.41864166666666663 2.1047583333333333 0.41864166666666663s1.4375166666666666 -0.14226666666666665 2.1047583333333333 -0.41864166666666663c0.6673333333333333 -0.276375 1.2736166666666666 -0.6815416666666667 1.7843833333333334 -1.1922166666666667 0.510675 -0.5107666666666667 0.9158416666666667 -1.1170499999999999 1.1922166666666667 -1.7843833333333334 0.276375 -0.6672416666666666 0.41864166666666663 -1.382425 0.41864166666666663 -2.1047583333333333 0 -0.7222416666666667 -0.14226666666666665 -1.437425 -0.41864166666666663 -2.1047583333333333 -0.276375 -0.6672416666666666 -0.6815416666666667 -1.2736166666666666 -1.1923083333333333 -1.7842916666666666 -0.510675 -0.5107666666666667 -1.1169583333333333 -0.9158416666666667 -1.7842916666666666 -1.1922166666666667 -0.6672416666666666 -0.27646666666666664 -1.3825166666666666 -0.4187333333333333 -2.1047583333333333 -0.4187333333333333s-1.437425 0.14226666666666665 -2.1047583333333333 0.4187333333333333c-0.6672416666666666 0.276375 -1.2736166666666666 0.6814499999999999 -1.7842916666666666 1.1922166666666667 -0.5107666666666667 0.510675 -0.9158416666666667 1.1170499999999999 -1.1923083333333333 1.7842916666666666 -0.276375 0.6673333333333333 -0.41864166666666663 1.3825166666666666 -0.41864166666666663 2.1047583333333333Z\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M18.252666666666666 15.815341666666665H15.821666666666667v-2.430083333333333\" stroke-width=\"2\"> </path> </svg> </button> <button class=\"add-details-button left hidden\" type=\"button\"> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"-1 -1 24 24\" id=\"add-details-icon\"> <desc>Notes Checklist Flip Streamline Icon: https://streamlinehq.com</desc> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M2.0625 2.0625h17.875s1.375 0 1.375 1.375v16.5s0 1.375 -1.375 1.375H2.0625s-1.375 0 -1.375 -1.375v-16.5s0 -1.375 1.375 -1.375Z\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.8125 0.6875v2.75\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.1875 0.6875v2.75\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.6875 16.5h4.125\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.6875 9.625h4.125\" stroke-width=\"2\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m9.075 14.025 -2.8874999999999997 3.85 -2.0625 -2.0625\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m9.075 6.875 -2.8874999999999997 3.85L4.125 8.6625\" stroke-width=\"2\"> </path> </svg> </button> <div class=\"right\"> <button class=\"duplicate-button\" type=\"button\"> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" id=\"duplicate-task-icon\"> <desc>Duplicate Streamline Icon: https://streamlinehq.com</desc> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.75 4.5V1.75c0 -0.55228 -0.4477 -1 -1 -1h-14c-0.55228 0 -1 0.44771 -1 1v14c0 0.5523 0.44772 1 1 1H4.5\" stroke-width=\"2.5\"></path> <path stroke-linejoin=\"round\" d=\"M7.25 8.25c0 -0.55229 0.44772 -1 1 -1h14c0.5523 0 1 0.44772 1 1v14c0 0.5523 -0.4477 1 -1 1h-14c-0.55229 0 -1 -0.4477 -1 -1v-14Z\" stroke-width=\"2.5\"></path> </svg> </button> <button class=\"delete-button\" type=\"button\"> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" id=\"delete-task-icon\"> <desc>Bin 1 Streamline Icon: https://streamlinehq.com</desc> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M1 5h22\" stroke-width=\"2\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14.25 1h-4.5c-0.39782 0 -0.77936 0.15804 -1.06066 0.43934C8.40804 1.72064 8.25 2.10218 8.25 2.5V5h7.5V2.5c0 -0.39782 -0.158 -0.77936 -0.4393 -1.06066C15.0294 1.15804 14.6478 1 14.25 1Z\" stroke-width=\"2\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.75 17.75v-7.5\" stroke-width=\"2\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14.25 17.75v-7.5\" stroke-width=\"2\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M18.86 21.62c-0.0278 0.3758 -0.197 0.7271 -0.4735 0.9832 -0.2764 0.256 -0.6397 0.3978 -1.0165 0.3968H6.63c-0.37683 0.001 -0.74006 -0.1408 -1.01653 -0.3968 -0.27647 -0.2561 -0.44565 -0.6074 -0.47347 -0.9832L3.75 5h16.5l-1.39 16.62Z\" stroke-width=\"2\"> </path> </svg> </button> </div> </div> </div> </div> <button class=\"tiny-add-bar\" type=\"button\"> </button>`;\n// Exports\nexport default code;","// Module\nvar code = `<div data-subtask-id=\"\" class=\"subtask single-line\"> <input data-field=\"isCompleted\" class=\"subtask-checkbox\" type=\"checkbox\"/> <button class=\"clear-subtask-button hidden\" type=\"button\">X</button> <input data-field=\"name\" class=\"subtask-title\" type=\"text\" value=\"SUBTASK_TITLE\" placeholder=\"+ subtask\"/> </div> `;\n// Exports\nexport default code;","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDay} function options.\n */\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of week, 0 represents Sunday\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nexport function getDay(date, options) {\n  return toDate(date, options?.in).getDay();\n}\n\n// Fallback for modularized imports:\nexport default getDay;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDaysInMonth} function options.\n */\n\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date, considering the context if provided.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport function getDaysInMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const monthIndex = _date.getMonth();\n  const lastDayOfMonth = constructFrom(_date, 0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}\n\n// Fallback for modularized imports:\nexport default getDaysInMonth;\n","// Module\nvar code = `<div class=\"calendar-component\"> <div class=\"cal-heading\"> <select class=\"month indicator\" name=\"date-month\"> <option value=\"0\">Jan</option> <option value=\"1\">Feb</option> <option value=\"2\">Mar</option> <option value=\"3\">Apr</option> <option value=\"4\">May</option> <option value=\"5\">Jun</option> <option value=\"6\">Jul</option> <option value=\"7\">Aug</option> <option value=\"8\">Sep</option> <option value=\"9\">Oct</option> <option value=\"10\">Nov</option> <option value=\"11\">Dec</option> </select> <select class=\"year\" name=\"date-year\"></select> </div> <div class=\"cal-body\"> <div class=\"day-names single-line\"> <span class=\"day-name\">Sun</span> <span class=\"day-name\">Mon</span> <span class=\"day-name\">Tue</span> <span class=\"day-name\">Wed</span> <span class=\"day-name\">Thu</span> <span class=\"day-name\">Fri</span> <span class=\"day-name\">Sat</span> </div> <div class=\"date-numbers\"></div> </div> </div> `;\n// Exports\nexport default code;","/* eslint-disable no-console */\n/* eslint-disable no-plusplus */\nimport { getDaysInMonth, getDay } from 'date-fns';\nimport calendarHTML from '../components/left-pane/datetime-picker.html';\n\nclass SelectedDate {\n  constructor(date) {\n    this.year = date.getFullYear();\n    this.month = date.getMonth();\n    this.monthName = date.toLocaleString('en-US', { month: 'short' });\n    this.day = date.getDate();\n  }\n\n  static get currentYear() {\n    return new Date().getFullYear();\n  }\n\n  changeMonthEvent(event) {\n    const todoElement = event.target.closest('.todo');\n    const newDate = new Date(this.year, event.target.value, this.day);\n    // eslint-disable-next-line no-use-before-define\n    const newClone = createCalendarClone(newDate);\n    event.target.closest('.schedule-calendar').replaceChildren(newClone);\n    const datetimeElement = todoElement.querySelector('.readonly.datetime');\n    datetimeElement.setAttribute(\n      'value',\n      `${this.year}-${event.target.value}-${this.day}`\n    );\n    datetimeElement.dispatchEvent(new Event('change', { bubbles: true }));\n  }\n\n  changeYearEvent(event) {\n    const todoElement = event.target.closest('.todo');\n    const newDate = new Date(event.target.value, this.month, this.day);\n    // eslint-disable-next-line no-use-before-define\n    const newClone = createCalendarClone(newDate);\n    event.target.closest('.schedule-calendar').replaceChildren(newClone);\n    const datetimeElement = todoElement.querySelector('.readonly.datetime');\n    datetimeElement.setAttribute(\n      'value',\n      `${event.target.value}-${this.month + 1}-${this.day}`\n    );\n    datetimeElement.dispatchEvent(new Event('change', { bubbles: true }));\n  }\n\n  changeDayEvent(event) {\n    const todoElement = event.target.closest('.todo');\n    const newDate = new Date(\n      this.year,\n      this.month,\n      event.target.getAttribute('data-number')\n    );\n    // eslint-disable-next-line no-use-before-define\n    const newClone = createCalendarClone(newDate);\n    event.target.closest('.schedule-calendar').replaceChildren(newClone);\n    const datetimeElement = todoElement.querySelector('.readonly.datetime');\n    datetimeElement.classList.remove('hidden');\n    datetimeElement.setAttribute(\n      'value',\n      `${this.year}-${this.month + 1}-${event.target.getAttribute('data-number')}`\n    );\n    datetimeElement.dispatchEvent(new Event('change', { bubbles: true }));\n  }\n}\n\nexport default function createCalendarClone(date) {\n  const calendarTemplate = document.createElement('template');\n  calendarTemplate.innerHTML = calendarHTML;\n  const calendarClone = document.importNode(calendarTemplate.content, true);\n  const selectedDate = new SelectedDate(date);\n  const yearDropdown = calendarClone.querySelector('.year');\n  for (let i = 0; i < 5; i++) {\n    yearDropdown.innerHTML += `\n    <option value=\"${SelectedDate.currentYear + i}\">\n      ${SelectedDate.currentYear + i}\n    </option>`;\n  }\n  calendarClone.querySelector(\n    `.year > [value=\"${selectedDate.year}\"]`\n  ).selected = true;\n  calendarClone.querySelector(\n    `.month > [value=\"${selectedDate.month}\"]`\n  ).selected = true;\n\n  // fill grid with empty buttons for day of the previous month\n  const dayOfWeekNumber = getDay(\n    new Date(selectedDate.year, selectedDate.month, 1)\n  );\n  for (let i = 0; i < dayOfWeekNumber; i++) {\n    calendarClone.querySelector('.date-numbers').innerHTML +=\n      '<button class=\"empty-date-number\" disabled></button>';\n  }\n\n  // fill in date number buttons for each day of month\n  const daysOfSelectedMonth = getDaysInMonth(date);\n  for (let i = 1; i <= daysOfSelectedMonth; i++) {\n    calendarClone.querySelector('.date-numbers').innerHTML += `\n      <button class=\"date-number selectable\" data-number=\"${i}\">${i}</button>`;\n  }\n  if (selectedDate.day) {\n    const chosenDateButton = calendarClone.querySelector(\n      `.date-numbers > [data-number=\"${selectedDate.day}\"]`\n    );\n    chosenDateButton.disabled = true;\n    chosenDateButton.classList.add('selected');\n  }\n\n  // Change Month Handler\n  calendarClone\n    .querySelector('.month')\n    // eslint-disable-next-line no-use-before-define\n    .addEventListener(\n      'change',\n      selectedDate.changeMonthEvent.bind(selectedDate)\n    );\n\n  // Change Year Handler\n  calendarClone\n    .querySelector('.year')\n    // eslint-disable-next-line no-use-before-define\n    .addEventListener(\n      'change',\n      selectedDate.changeYearEvent.bind(selectedDate)\n    );\n\n  // Change Day Handler\n  const allDateNumberButtons = calendarClone.querySelectorAll('.date-number');\n  allDateNumberButtons.forEach((button) =>\n    button.addEventListener(\n      'click',\n      selectedDate.changeDayEvent.bind(selectedDate)\n    )\n  );\n\n  return calendarClone;\n}\n","/* eslint-disable no-console */\n/* eslint-disable import/extensions */\nimport todoHTML from '../components/left-pane/items-views/1.todo-view/2.task-template.html';\nimport subtaskHTML from '../components/left-pane/items-views/1.todo-view/subtask-template.html';\nimport createCalendarClone from '../utilities/date-picker.js';\n\nexport default class TodoView {\n  constructor(modeller, controller) {\n    this.todoModeller = modeller;\n    this.todoModel = modeller.todoModel;\n    this.todoController = controller;\n  }\n\n  // TDL: move all event handlers that affect both DOM and Model to the controller\n  // TDL: all query selectors initialized first whenever action is taken on new todo\n  static SELECTORS = {\n    dateTimeTaskBarButton: '.nearest-datetime-button',\n    toggleDetailsArrow: '.todo-details-on',\n    todoEditDropdown: '.todo-edit-dropdown',\n    todoDetailsDropdown: '.todo-details-dropdown',\n    todoScheduleDropdown: '.todo-schedule-dropdown',\n    extantSubtasks: '.extant-subtasks',\n    subtaskTitle: '.subtask-title',\n    subtaskCheckbox: '.subtask-checkbox',\n    subtaskDelete: '.clear-subtask-button',\n    notesContainer: '.notes.container',\n    readonlyDatetime: '.readonly.datetime',\n    changeDatetimeButton: '.nearest-datetime-button',\n    workDate: '.open-edit-button .work-date',\n    workTime: '.open-edit-button .work-time',\n    addDateTimeButton: '.add-datetime-button',\n    addDetailsButton: '.add-details-button',\n    datetimeOnlyButton: '.datetime-only-button',\n    datetimeAndDeadlineButton: '.add-deadline-button',\n    scheduleCalendar: '.schedule-calendar',\n    deleteButton: '.delete-button',\n    tinyAdd: '.tiny-add-bar',\n  };\n\n  renderTodo(todo) {\n    if (todo.isCompleted === false) {\n      // TDL: put this in static initialization block\n      const todoTemplate = document.createElement('template');\n      todoTemplate.innerHTML = todoHTML;\n      const todoClone = document.importNode(todoTemplate.content, true);\n      todoClone.querySelector('.todo-title').setAttribute('value', todo.name);\n      const todoDiv = todoClone.querySelector('.todo');\n      todoDiv.setAttribute('data-list-id', todo.listId);\n      todoDiv.setAttribute('data-sublist-id', todo.sublistId);\n      todoDiv.setAttribute('data-todo-id', todo.todoId);\n      todoDiv.setAttribute('data-todo-type', todo.type);\n\n      // .todo-bar event listeners\n      todoDiv.addEventListener('mouseover', TodoView.taskCheckboxMouseover);\n      todoDiv.addEventListener(\n        'mouseout',\n        this.taskCheckboxMouseout.bind(this)\n      );\n      const taskCheckbox = todoDiv.querySelector('.task-checkbox');\n      taskCheckbox.addEventListener('change', TodoView.removeCompletedTodo);\n      todoClone\n        .querySelector(TodoView.SELECTORS.toggleDetailsArrow)\n        .addEventListener('click', TodoView.handleDropdownArrowClick);\n\n      // .bottom-section event listeners\n      todoClone\n        .querySelector(TodoView.SELECTORS.deleteButton)\n        .addEventListener('click', this.handleDeleteTodoElement.bind(this));\n      todoClone\n        .querySelector(TodoView.SELECTORS.addDateTimeButton)\n        .addEventListener(\n          'click',\n          TodoView.toggleDetailsDatetimeDropdownsEvent\n        );\n      todoClone\n        .querySelector(TodoView.SELECTORS.addDetailsButton)\n        .addEventListener(\n          'click',\n          TodoView.toggleDetailsDatetimeDropdownsEvent\n        );\n\n      // tiny add bar functionality\n      todoClone\n        .querySelector(TodoView.SELECTORS.tinyAdd)\n        .addEventListener('mouseover', (event) => {\n          // eslint-disable-next-line no-param-reassign\n          event.target.innerHTML = '+';\n        });\n      todoClone\n        .querySelector(TodoView.SELECTORS.tinyAdd)\n        .addEventListener('mouseout', (event) => {\n          // eslint-disable-next-line no-param-reassign\n          event.target.innerHTML = '';\n        });\n      todoClone\n        .querySelector(TodoView.SELECTORS.tinyAdd)\n        .addEventListener(\n          'click',\n          this.handleTinyAddBarBelowTaskClick.bind(this)\n        );\n\n      if (todo.nextSession) {\n        // TODO: send to datetime-formatter.js and replace todo.workDate below with output\n        const dateTimeTaskBarValue = todoClone.querySelector(\n          TodoView.SELECTORS.readonlyDatetime\n        );\n        dateTimeTaskBarValue.setAttribute('value', todo.nextSession);\n        todoClone\n          .querySelector(TodoView.SELECTORS.changeDatetimeButton)\n          .addEventListener('click', TodoView.handleDatetimeButtonClick);\n        const calendarClone = createCalendarClone(new Date(todo.nextSession));\n        todoClone\n          .querySelector(TodoView.SELECTORS.scheduleCalendar)\n          .appendChild(calendarClone);\n      } else {\n        todoClone\n          .querySelector(TodoView.SELECTORS.readonlyDatetime)\n          .classList.add('hidden');\n        const calendarClone = createCalendarClone(new Date());\n        todoClone\n          .querySelector(TodoView.SELECTORS.scheduleCalendar)\n          .appendChild(calendarClone);\n      }\n\n      // checklist event handlers and rendering\n      const extantSubtasksContainer = todoClone.querySelector(\n        TodoView.SELECTORS.extantSubtasks\n      );\n      if (todo.checklist) {\n        todo.checklist.forEach((subtask) => {\n          this.addSubtaskToDOMfromData(subtask, extantSubtasksContainer);\n        });\n      }\n      todoClone\n        .querySelector('.blank.subtask .subtask-title')\n        .addEventListener('keypress', this.handleSubtaskAddOnEnter.bind(this));\n\n      if (todo.notes) {\n        const notesContainer = todoClone.querySelector(\n          TodoView.SELECTORS.notesContainer\n        );\n        notesContainer.value = todo.notes;\n      }\n      return todoClone;\n    }\n    return null;\n  }\n\n  handleTinyAddBarBelowTaskClick(event) {\n    const priorTodo = event.target.previousElementSibling;\n    const todoData =\n      this.todoController.appendToMiddleOfModelAndReturnBlankTodo(priorTodo);\n    const todoClone = this.renderTodo(todoData);\n    const { parentNode } = event.target;\n    parentNode.insertBefore(todoClone, event.target.nextSibling);\n    const todoTitleElement = parentNode.querySelector(\n      `.todo[data-todo-id='${todoData.todoId}'] .todo-title`\n    );\n    todoTitleElement.focus();\n    // TDL: show datetime button 'schedule task' then hide until datetime added\n  }\n\n  handleTinyAddBarBelowListClick(event) {\n    const todoData = this.todoController.appendToStartOfListAndReturnBlankTodo(\n      event.target.nextElementSibling\n    );\n    const todoClone = this.renderTodo(todoData);\n    event.target.after(todoClone);\n    event.target.parentNode\n      .querySelector(`.todo[data-todo-id='${todoData.todoId}'] .todo-title`)\n      .focus();\n  }\n\n  static removeCompletedTodo(event) {\n    const todoDiv = event.target.closest('.todo');\n    // eslint-disable-next-line no-param-reassign\n    event.target.value = true;\n    todoDiv.remove();\n  }\n\n  // TDL: move this and its event listener to the controller\n  handleDeleteTodoElement(event) {\n    const dataElementToDelete = this.todoController.getTodoData(\n      event.currentTarget\n    );\n    this.todoModeller.deleteFromModelAndStore(dataElementToDelete);\n    const todoDiv = event.target.closest('.todo');\n    if (todoDiv.nextElementSibling.classList.contains('tiny-add-bar')) {\n      todoDiv.nextElementSibling.remove();\n    }\n    todoDiv.remove();\n  }\n\n  // NEED TO REMOVE MODEL IN VIEW\n  taskCheckboxMouseout(event) {\n    const todoData = this.todoController.getTodoData(event.currentTarget);\n    if (!todoData.isDetailsOpen && !todoData.isScheduleOpen) {\n      event.currentTarget\n        .querySelector('.task-checkbox.popover')\n        .classList.add('hidden');\n    }\n  }\n\n  static taskCheckboxMouseover(event) {\n    event.currentTarget\n      .querySelector('.task-checkbox.popover')\n      .classList.remove('hidden');\n  }\n\n  static handleDropdownArrowClick(event) {\n    const todoBarDiv = event.currentTarget.closest('.todo-bar');\n    const todoElement = event.currentTarget.closest('.todo');\n    const editingDropdownElement = todoElement.querySelector(\n      TodoView.SELECTORS.todoEditDropdown\n    );\n    const detailsDropdownElement = todoElement.querySelector(\n      TodoView.SELECTORS.todoDetailsDropdown\n    );\n    const detailsViewButton = todoElement.querySelector(\n      TodoView.SELECTORS.addDetailsButton\n    );\n    const scheduleDropdownElement = todoElement.querySelector(\n      TodoView.SELECTORS.todoScheduleDropdown\n    );\n    const scheduleViewButton = todoElement.querySelector(\n      TodoView.SELECTORS.addDateTimeButton\n    );\n    const arrowsElement = todoElement.querySelector('.todo-details-on');\n    // details dropdown is open\n    if (!detailsDropdownElement.classList.contains('hidden')) {\n      todoBarDiv.style.borderBottomLeftRadius = '10px';\n      todoBarDiv.style.borderBottomRightRadius = '10px';\n      detailsDropdownElement.classList.add('hidden');\n      scheduleViewButton.classList.add('hidden');\n\n      // schedule dropdown is open\n    } else if (!scheduleDropdownElement.classList.contains('hidden')) {\n      todoBarDiv.style.borderBottomLeftRadius = '10px';\n      todoBarDiv.style.borderBottomRightRadius = '10px';\n      scheduleDropdownElement.classList.add('hidden');\n      detailsViewButton.classList.add('hidden');\n\n      // both are closed, so open details dropdown\n    } else if (editingDropdownElement.classList.contains('hidden')) {\n      detailsDropdownElement.classList.remove('hidden');\n      todoBarDiv.style.borderBottomLeftRadius = '0px';\n      todoBarDiv.style.borderBottomRightRadius = '0px';\n      scheduleViewButton.classList.remove('hidden');\n    }\n    editingDropdownElement.classList.toggle('hidden');\n    TodoView.toggleDropdownArrows(arrowsElement);\n  }\n\n  static handleDatetimeButtonClick(event) {\n    const todoBarDiv = event.currentTarget.closest('.todo-bar');\n    const todoElement = event.currentTarget.closest('.todo');\n    const editingDropdownElement = todoElement.querySelector(\n      TodoView.SELECTORS.todoEditDropdown\n    );\n    const detailsDropdownElement = todoElement.querySelector(\n      TodoView.SELECTORS.todoDetailsDropdown\n    );\n    const detailsViewButton = todoElement.querySelector(\n      TodoView.SELECTORS.addDetailsButton\n    );\n    const scheduleDropdownElement = todoElement.querySelector(\n      TodoView.SELECTORS.todoScheduleDropdown\n    );\n    const arrowsElement = todoElement.querySelector('.todo-details-on');\n\n    // details dropdown is open\n    if (!detailsDropdownElement.classList.contains('hidden')) {\n      TodoView.toggleDetailsDatetimeDropdownsEvent(event);\n\n      // schedule dropdown is open\n    } else if (!scheduleDropdownElement.classList.contains('hidden')) {\n      TodoView.toggleDropdownArrows(arrowsElement);\n      todoBarDiv.style.borderBottomLeftRadius = '10px';\n      todoBarDiv.style.borderBottomRightRadius = '10px';\n      detailsViewButton.classList.add('hidden');\n      scheduleDropdownElement.classList.add('hidden');\n      editingDropdownElement.classList.add('hidden');\n\n      // both are closed\n    } else {\n      TodoView.toggleDropdownArrows(arrowsElement);\n      todoBarDiv.style.borderBottomLeftRadius = '0px';\n      todoBarDiv.style.borderBottomRightRadius = '0px';\n      detailsViewButton.classList.remove('hidden');\n      scheduleDropdownElement.classList.remove('hidden');\n      editingDropdownElement.classList.remove('hidden');\n    }\n  }\n\n  static toggleDropdownArrows(arrowsElement) {\n    arrowsElement\n      .querySelector(':scope > :first-child')\n      .classList.toggle('hidden');\n    arrowsElement\n      .querySelector(':scope > :nth-child(2)')\n      .classList.toggle('hidden');\n  }\n\n  // when buttons in edit-dropdown clicked\n  static toggleDetailsDatetimeDropdownsEvent(event) {\n    const todoDiv = event.currentTarget.closest('.todo');\n    todoDiv\n      .querySelector(TodoView.SELECTORS.todoScheduleDropdown)\n      .classList.toggle('hidden');\n    todoDiv\n      .querySelector(TodoView.SELECTORS.todoDetailsDropdown)\n      .classList.toggle('hidden');\n    todoDiv\n      .querySelector(TodoView.SELECTORS.addDateTimeButton)\n      .classList.toggle('hidden');\n    todoDiv\n      .querySelector(TodoView.SELECTORS.addDetailsButton)\n      .classList.toggle('hidden');\n  }\n\n  handleSubtaskAddOnEnter(event) {\n    if (event.key === 'Enter') {\n      if (event.target.value !== '') {\n        const newSubtaskData =\n          this.todoController.addAndReturnNewSubtask(event);\n        // eslint-disable-next-line no-param-reassign\n        event.target.value = '';\n        const extantSubtasksContainer = event.target\n          .closest('.todo')\n          .querySelector(TodoView.SELECTORS.extantSubtasks);\n        this.addSubtaskToDOMfromData(newSubtaskData, extantSubtasksContainer);\n      }\n    }\n  }\n\n  static toggleShowDeleteSubtaskButton(event) {\n    event.target\n      .closest('.subtask')\n      .querySelector('.clear-subtask-button')\n      ?.classList.toggle('hidden');\n  }\n\n  addSubtaskToDOMfromData(subtask, extantSubtasksContainer) {\n    const subtaskTemplate = document.createElement('template');\n    subtaskTemplate.innerHTML = subtaskHTML;\n    const subtaskClone = document.importNode(subtaskTemplate.content, true);\n    subtaskClone.firstElementChild.setAttribute(\n      'data-subtask-id',\n      subtask.subtaskId\n    );\n    subtaskClone\n      .querySelector(TodoView.SELECTORS.subtaskTitle)\n      .setAttribute('value', subtask.name);\n    if (subtask.isCompleted) {\n      subtaskClone.querySelector(TodoView.SELECTORS.subtaskCheckbox).checked =\n        true;\n    } else {\n      subtaskClone.querySelector(TodoView.SELECTORS.subtaskCheckbox).checked =\n        false;\n    }\n    ['focusin', 'focusout'].forEach((eventType) => {\n      subtaskClone\n        .querySelector('.subtask')\n        .addEventListener(eventType, (event) => {\n          setTimeout(() => {\n            if (\n              !document.activeElement.classList.contains(\n                TodoView.SELECTORS.subtaskDelete\n              )\n            ) {\n              TodoView.toggleShowDeleteSubtaskButton(event);\n            }\n          }, 100);\n        });\n    });\n\n    subtaskClone\n      .querySelector('.clear-subtask-button')\n      .addEventListener(\n        'click',\n        this.todoController.handleSubtaskDelete.bind(this)\n      );\n    extantSubtasksContainer.appendChild(subtaskClone);\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./assets/up.svg\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./assets/down.png\", import.meta.url);\n// Module\nvar code = ` <div class=\"left popover hidden\"> <button class=\"collapse-one-level-button\" type=\"button\"> <img class=\"edit icon\" src=\"${___HTML_LOADER_IMPORT_0___}\"/> </button> <button class=\"expand-one-level-button\" type=\"button\"> <img class=\"edit icon\" src=\"${___HTML_LOADER_IMPORT_1___}\"/> </button> <button class=\"organize-by-button\" type=\"button\"> ○ </button> </div> <ul class=\"order-options popover hidden\"> <li> <input id=\"order-by-name\" name=\"organize-by\" type=\"radio\"/> Name </li> <li> <input id=\"order-by-type\" name=\"organize-by\" type=\"radio\"/> Type </li> <li> <input id=\"order-by-oldest-to-newest\" name=\"organize-by\" type=\"radio\"/> Oldest to Newest </li> <li> <input id=\"order-by-newest-to-oldest\" name=\"organize-by\" type=\"radio\"/> Newest to Oldest </li> </ul> <div data-list-id=\"\" class=\"list\"> <div class=\"heading single-line\"> <button class=\"open-list-button\" type=\"button\"> <input class=\"readonly title\" type=\"text\" value=\"LIST_TITLE\" readonly=\"readonly\"/> </button> <input data-field=\"name\" class=\"editing-list-title hidden\" type=\"text\" value=\"LIST_TITLE\"/> <button class=\"options-list-button hidden\" type=\"button\"> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"-1 -1 24 24\" id=\"open-options-icon\"> <desc>Reward Stars 2 Streamline Icon: https://streamlinehq.com</desc> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.855083333333333 1.2604166666666665c-0.02291666666666667 5.757583333333333 2.776583333333333 9.023666666666665 9.166666666666666 9.166666666666666 -5.92625 -0.02291666666666667 -8.866 3.1542499999999998 -9.166666666666666 9.166666666666666 -0.057749999999999996 -5.6714166666666666 -2.5923516666666666 -9.174916666666666 -9.16668775 -9.166666666666666 5.881336083333333 -0.08249999999999999 9.143771083333332 -2.9214166666666666 9.16668775 -9.166666666666666Z\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.427666666666667 1.2604166666666665v3.6666666666666665\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.594333333333333 3.09375h3.6666666666666665\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.479166666666664 17.072916666666664v3.6666666666666665\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.645833333333332 18.90625h3.6666666666666665\" stroke-width=\"2\"> </path> </svg> </button> </div> <div class=\"body container hidden\"> <div class=\"options popover hidden\"> <button class=\"add-sublist-button\"> Add Sublist </button> <button class=\"print-list-button\"> Print List </button> <button class=\"archive-list-button\"> Archive List </button> </div> <div class=\"todo container\"> <button class=\"tiny-add-bar-list\" type=\"button\"> </button></div> <div class=\"sublist container\"> </div> </div> </div> `;\n// Exports\nexport default code;","// Module\nvar code = ` <div data-list-id=\"\" data-sublist-id=\"\" class=\"sublist\"> <div class=\"heading single-line\"> <button class=\"open-list-button\" type=\"button\"> <input class=\"readonly title\" type=\"text\" value=\"LIST_TITLE\" readonly=\"readonly\"/> </button> <input data-field=\"name\" class=\"editing-list-title hidden\" type=\"text\" value=\"LIST_TITLE\"/> <button class=\"options-list-button hidden\" type=\"button\"> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"-1 -1 24 24\" id=\"open-options-icon\"> <desc>Reward Stars 2 Streamline Icon: https://streamlinehq.com</desc> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.855083333333333 1.2604166666666665c-0.02291666666666667 5.757583333333333 2.776583333333333 9.023666666666665 9.166666666666666 9.166666666666666 -5.92625 -0.02291666666666667 -8.866 3.1542499999999998 -9.166666666666666 9.166666666666666 -0.057749999999999996 -5.6714166666666666 -2.5923516666666666 -9.174916666666666 -9.16668775 -9.166666666666666 5.881336083333333 -0.08249999999999999 9.143771083333332 -2.9214166666666666 9.16668775 -9.166666666666666Z\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.427666666666667 1.2604166666666665v3.6666666666666665\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.594333333333333 3.09375h3.6666666666666665\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.479166666666664 17.072916666666664v3.6666666666666665\" stroke-width=\"2\"> </path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.645833333333332 18.90625h3.6666666666666665\" stroke-width=\"2\"> </path> </svg> </button> </div> <div class=\"body container hidden\"> <div class=\"options popover hidden\"> <button class=\"print-sublist-button\"> Print Sublist </button> <button class=\"archive-list-button\"> Archive Sublist </button> </div> <button class=\"tiny-add-bar-list\" type=\"button\"></button></div> </div> `;\n// Exports\nexport default code;","/* eslint-disable no-console */\n/* eslint-disable import/extensions */\nimport TodoView from './todo-view.js';\nimport listHTML from '../components/left-pane/items-views/1.todo-view/list-template.html';\nimport sublistHTML from '../components/left-pane/items-views/1.todo-view/sublist-template.html';\n\nexport default class ListView {\n  constructor(modeller, controller) {\n    this.todoController = controller;\n    this.todoModeller = modeller;\n    this.todoModel = modeller.todoModel;\n    this.todoView = new TodoView(modeller, controller);\n\n    this.renderView();\n  }\n\n  static SELECTORS = {\n    readonlyTitle: '.readonly.title',\n    editingTitle: '.editing-list-title',\n    optionsPopover: '.options.popover',\n    optionsListButton: '.options-list-button',\n    todoContainer: '.todo.container',\n    sublistContainer: '.sublist.container',\n    bodyContainer: '.body.container',\n    openListButton: '.open-list-button',\n    tinyAdd: '.tiny-add-bar-list',\n  };\n\n  renderView() {\n    const container = document.getElementById('todo-panel');\n    container.innerHTML = '';\n    this.todoModel.forEach((list) => {\n      container.appendChild(this.renderList(list));\n      // this is a hack; TDL: replace with default list\n      if (list.listId === 'list-1') {\n        list.toggleOpen();\n        ListView.toggleListOpen(list);\n      }\n    });\n    container.addEventListener(\n      'change',\n      this.todoController.handleInputChange.bind(this)\n    );\n  }\n\n  renderList(list) {\n    const listTemplate = document.createElement('template');\n    listTemplate.innerHTML = listHTML;\n    const listClone = document.importNode(listTemplate.content, true);\n\n    listClone.querySelector('.list').setAttribute('data-list-id', list.listId);\n    const readonlyListTitleDiv = listClone.querySelector(\n      ListView.SELECTORS.readonlyTitle\n    );\n    readonlyListTitleDiv.setAttribute('value', list.name);\n    readonlyListTitleDiv.addEventListener(\n      'click',\n      this.readonlyListTitleClick.bind(this)\n    );\n    listClone\n      .querySelector(ListView.SELECTORS.editingTitle)\n      .setAttribute('value', list.name);\n\n    const optionsListButton = listClone.querySelector(\n      ListView.SELECTORS.optionsListButton\n    );\n    optionsListButton.addEventListener('click', ListView.optionsListClick);\n\n    // tiny add bar fxy\n    listClone\n      .querySelector(ListView.SELECTORS.tinyAdd)\n      .addEventListener('mouseover', (event) => {\n        // eslint-disable-next-line no-param-reassign\n        event.target.innerHTML = '+';\n      });\n    listClone\n      .querySelector(ListView.SELECTORS.tinyAdd)\n      .addEventListener('mouseout', (event) => {\n        // eslint-disable-next-line no-param-reassign\n        event.target.innerHTML = '';\n      });\n    listClone\n      .querySelector(ListView.SELECTORS.tinyAdd)\n      .addEventListener(\n        'click',\n        this.todoView.handleTinyAddBarBelowListClick.bind(this.todoView)\n      );\n\n    // Populate todo container\n    list.todos.forEach((todo) => {\n      const todoClone = this.todoView.renderTodo(todo);\n      if (todoClone) {\n        listClone\n          .querySelector(ListView.SELECTORS.todoContainer)\n          .appendChild(todoClone);\n      }\n    });\n\n    // Populate sublist container\n    const sublistContainer = listClone.querySelector(\n      ListView.SELECTORS.sublistContainer\n    );\n    if (list.sublists.length !== 0) {\n      list.sublists.forEach((sublist) => {\n        const sublistClone = this.populateSublist(sublist);\n        if (sublistClone) {\n          sublistContainer.appendChild(sublistClone);\n        }\n      });\n    } else {\n      sublistContainer.classList.add('hidden');\n    }\n    return listClone;\n  }\n\n  readonlyListTitleClick(event) {\n    const sublistId = event.target\n      .closest('.sublist')\n      ?.getAttribute('data-sublist-id');\n    const listId = event.target.closest('.list').getAttribute('data-list-id');\n\n    if (!sublistId) {\n      this.todoModel.forEach((list) => {\n        list.toggleOpen();\n        ListView.toggleListOpen(list);\n      });\n    } else {\n      const listData = this.todoModel.find((list) => list.listId === listId);\n      console.log('sublist ID', sublistId);\n      listData.sublists.forEach((sublist) => {\n        if (sublist.isOpen || sublist.sublistId === sublistId) {\n          sublist.toggleOpen();\n          ListView.toggleListOpen(sublist);\n        }\n      });\n    }\n  }\n\n  static optionsListClick(event) {\n    const optionsPopover = event.currentTarget\n      .closest('.heading')\n      .nextElementSibling.querySelector(ListView.SELECTORS.optionsPopover);\n    if (optionsPopover) {\n      optionsPopover.classList.toggle('hidden');\n    }\n  }\n\n  static toggleListOpen(list) {\n    let listDiv;\n    if (list.listId) {\n      listDiv = document.querySelector(`div[data-list-id=\"${list.listId}\"]`);\n    } else if (list.sublistId) {\n      listDiv = document.querySelector(\n        `div[data-sublist-id=\"${list.sublistId}\"]`\n      );\n    }\n    if (listDiv) {\n      const bodyContainer = listDiv.querySelector(\n        ListView.SELECTORS.bodyContainer\n      );\n      if (bodyContainer) {\n        bodyContainer.classList.toggle('hidden');\n      }\n\n      const headingDiv = listDiv.querySelector('.heading');\n      if (headingDiv) {\n        if (list.isOpen) {\n          headingDiv.style.borderBottomLeftRadius = '0px';\n          headingDiv.style.borderBottomRightRadius = '0px';\n        } else {\n          headingDiv.style.borderBottomLeftRadius = '10px';\n          headingDiv.style.borderBottomRightRadius = '10px';\n        }\n      }\n\n      const openListButton = listDiv.querySelector(\n        ListView.SELECTORS.openListButton\n      );\n      if (openListButton) {\n        openListButton.classList.toggle('hidden');\n      }\n\n      const editingListTitle = listDiv.querySelector(\n        ListView.SELECTORS.editingTitle\n      );\n      if (editingListTitle) {\n        editingListTitle.classList.toggle('hidden');\n      }\n\n      const optionsButton = listDiv.querySelector(\n        ListView.SELECTORS.optionsListButton\n      );\n      if (optionsButton) {\n        optionsButton.classList.toggle('hidden');\n      }\n    }\n  }\n\n  populateSublist(sublist) {\n    const sublistTemplate = document.createElement('template');\n    sublistTemplate.innerHTML = sublistHTML;\n    const sublistClone = document.importNode(sublistTemplate.content, true);\n\n    const sublistDiv = sublistClone.querySelector('.sublist');\n    sublistDiv.setAttribute('data-sublist-id', sublist.sublistId);\n    const readonlySublistTitleDiv = sublistClone.querySelector(\n      ListView.SELECTORS.readonlyTitle\n    );\n    readonlySublistTitleDiv.setAttribute('value', sublist.name);\n    readonlySublistTitleDiv.addEventListener(\n      'click',\n      this.readonlyListTitleClick.bind(this)\n    );\n    sublistClone\n      .querySelector(ListView.SELECTORS.editingTitle)\n      .setAttribute('value', sublist.name);\n\n    const optionsSublistButton = sublistClone.querySelector(\n      ListView.SELECTORS.optionsListButton\n    );\n    optionsSublistButton.addEventListener('click', ListView.optionsListClick);\n\n    // tiny add bar fxy\n    sublistClone\n      .querySelector(ListView.SELECTORS.tinyAdd)\n      .addEventListener('mouseover', (event) => {\n        // eslint-disable-next-line no-param-reassign\n        event.target.innerHTML = '+';\n      });\n    sublistClone\n      .querySelector(ListView.SELECTORS.tinyAdd)\n      .addEventListener('mouseout', (event) => {\n        // eslint-disable-next-line no-param-reassign\n        event.target.innerHTML = '';\n      });\n    sublistClone\n      .querySelector(ListView.SELECTORS.tinyAdd)\n      .addEventListener(\n        'click',\n        this.todoView.handleTinyAddBarBelowListClick.bind(this.todoView)\n      );\n\n    // Populate todo container\n    sublist.todos.forEach((todo) => {\n      const todoClone = this.todoView.renderTodo(todo);\n      if (todoClone) {\n        sublistClone\n          .querySelector(ListView.SELECTORS.bodyContainer)\n          .appendChild(todoClone);\n      }\n    });\n    return sublistClone;\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\n/* eslint-disable max-classes-per-file */\n\nexport class SubtaskData {\n  static #counter = 1;\n\n  static get counter() {\n    return this.#counter;\n  }\n\n  static incrementCounter() {\n    return this.#counter++;\n  }\n\n  constructor({ name, isCompleted = false }) {\n    this.subtaskId = `subtask-${SubtaskData.incrementCounter()}`;\n    this.name = name;\n    this.isCompleted = isCompleted;\n  }\n}\n\nexport class SessionData {\n  static #counter = 1;\n\n  static get counter() {\n    return this.#counter;\n  }\n\n  static incrementCounter() {\n    return this.#counter++;\n  }\n\n  constructor({\n    startDate = null,\n    startTime = null,\n    endDate = null,\n    endTime = null,\n    isLogged = false,\n    isPast = false,\n  } = {}) {\n    // defaults to empty session if no vals\n    this.sessionId = `session-${SessionData.incrementCounter()}`;\n    this.startDate = startDate;\n    this.startTime = startTime;\n    this.endDate = endDate;\n    this.endTime = endTime;\n    this.isLogged = isLogged;\n    this.isPast = isPast;\n  }\n}\n\nexport class TodoData {\n  static #counter = 1;\n\n  static get counter() {\n    return this.#counter;\n  }\n\n  static incrementCounter() {\n    return this.#counter++;\n  }\n\n  #isDetailsOpen;\n\n  #isScheduleOpen;\n\n  constructor({\n    listId = '',\n    sublistId = '',\n    name = '',\n    type = 'task',\n    isDetailsOpen = false,\n    isScheduleOpen = false,\n    isCompleted = false,\n    schedule = [],\n    nextSession = null,\n    checklist = [],\n    notes = '',\n  } = {}) {\n    this.listId = listId;\n    this.sublistId = sublistId;\n    this.todoId = `todo-${TodoData.incrementCounter()}`;\n    this.name = name;\n    this.type = type;\n    this.#isDetailsOpen = isDetailsOpen;\n    this.#isScheduleOpen = isScheduleOpen;\n    this.isCompleted = isCompleted;\n    this.schedule = Array.isArray(schedule)\n      ? schedule.map((session) =>\n          session instanceof SessionData ? session : new SessionData(session)\n        )\n      : [];\n    this.nextSession = nextSession;\n    this.checklist = Array.isArray(checklist)\n      ? checklist.map((subtask) => new SubtaskData(subtask))\n      : [];\n    this.notes = notes;\n  }\n\n  get isScheduleOpen() {\n    return this.#isScheduleOpen;\n  }\n\n  get isDetailsOpen() {\n    return this.#isDetailsOpen;\n  }\n\n  toggleScheduleOpen() {\n    this.#isScheduleOpen = !this.#isScheduleOpen;\n  }\n\n  toggleDetailsOpen() {\n    this.#isDetailsOpen = !this.#isDetailsOpen;\n  }\n\n  checkIfNextSession(sessionToCheck) {\n    if (!(sessionToCheck instanceof SessionData)) {\n      throw new Error('Invalid session passed to checkIfNextSession.');\n    }\n    if (this.schedule.length === 0) {\n      this.nextSession = sessionToCheck;\n    } else if (\n      this.nextSession.startDate > sessionToCheck.startDate ||\n      (this.nextSession.startDate === sessionToCheck.startDate &&\n        this.nextSession.startTime > sessionToCheck.startTime)\n    ) {\n      this.nextSession = sessionToCheck;\n    }\n  }\n}\n\nexport class SublistData {\n  static #counter = 1;\n\n  static get counter() {\n    return this.#counter;\n  }\n\n  static incrementCounter() {\n    return this.#counter++;\n  }\n\n  #isOpen;\n\n  constructor({ name, isOpen = false, todos = [] }) {\n    this.sublistId = `sublist-${SublistData.incrementCounter()}`;\n    this.name = name;\n    this.#isOpen = isOpen;\n    this.todos = Array.isArray(todos)\n      ? todos.map((todo) =>\n          todo instanceof TodoData ? todo : new TodoData(todo)\n        )\n      : [];\n  }\n\n  get isOpen() {\n    return this.#isOpen;\n  }\n\n  toggleOpen() {\n    this.#isOpen = !this.#isOpen;\n  }\n}\n\nexport class ListData {\n  static #counter = 1;\n\n  static get counter() {\n    return this.#counter;\n  }\n\n  static incrementCounter() {\n    return this.#counter++;\n  }\n\n  #isOpen;\n\n  constructor({ name, isOpen = false, todos = [], sublists = [] }) {\n    this.listId = `list-${ListData.incrementCounter()}`;\n    this.name = name;\n    this.#isOpen = isOpen;\n    this.todos = Array.isArray(todos)\n      ? todos.map((todo) =>\n          todo instanceof TodoData ? todo : new TodoData(todo)\n        )\n      : [];\n    this.sublists = Array.isArray(sublists)\n      ? sublists.map((sublist) =>\n          sublist instanceof SublistData ? sublist : new SublistData(sublist)\n        )\n      : [];\n  }\n\n  get isOpen() {\n    return this.#isOpen;\n  }\n\n  toggleOpen() {\n    this.#isOpen = !this.#isOpen;\n  }\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-console */\n/* eslint-disable import/extensions */\nimport { ListData } from './item-classes.js';\n\nexport default class TodoModeller {\n  constructor() {\n    this.todoModel = this.loadData();\n  }\n\n  loadData() {\n    // STORAGE EMPTY => POPULATE DEMO DATA\n    if (localStorage.length === 0) {\n      // eslint-disable-next-line no-use-before-define\n      this.todoModel = demoData.map((list) => new ListData(list));\n      this.saveToLocalStorage();\n      return this.todoModel;\n    }\n    const storedData = localStorage.getItem('storedLists');\n    return JSON.parse(storedData).map((list) => new ListData(list)); // converts raw objects to class instances\n  }\n\n  saveToLocalStorage() {\n    localStorage.setItem('storedLists', JSON.stringify(this.todoModel));\n  }\n\n  updateFieldInModelAndStore(\n    listId,\n    sublistId,\n    todoId,\n    subtaskId,\n    field,\n    value\n  ) {\n    const list = this.todoModel.find((listData) => listData.listId === listId);\n    const sublist = list.sublists.find(\n      (sublistData) => sublistData.sublistId === sublistId\n    );\n    // checkbox change events on todo's only send todoId and field\n    // this finds the todo even without listId so its isCompleted status can be toggled\n    let todo;\n    if (sublist) {\n      todo = sublist.todos.find((todoData) => todoData.todoId === todoId);\n    } else if (list) {\n      todo = list.todos.find((todoData) => todoData.todoId === todoId);\n    } else {\n      const flatTodos = [\n        ...this.todoModel.flatMap((flatList) => [\n          ...flatList.todos,\n          ...flatList.sublists.flatMap((flatSublist) => flatSublist.todos),\n        ]),\n      ];\n      todo = flatTodos.find((todoData) => todoData.todoId === todoId);\n    }\n    const subtask = todo?.checklist?.find(\n      (subtaskData) => subtaskData.subtaskId === subtaskId\n    );\n\n    // set values in model and save\n    if (subtask) {\n      if (field === 'isCompleted') {\n        subtask.isCompleted = !subtask.isCompleted;\n      } else {\n        subtask[field] = value;\n      }\n    } else if (todo) {\n      if (field === 'isCompleted') {\n        todo.isCompleted = !todo.isCompleted;\n      } else {\n        todo[field] = value;\n      }\n    } else if (sublist) {\n      sublist[field] = value;\n    } else if (list) {\n      list[field] = value;\n    }\n    this.saveToLocalStorage();\n  }\n\n  deleteFromModelAndStore(dataElement) {\n    const list = this.todoModel.find(\n      (listData) => listData.listId === dataElement.listId\n    );\n    const sublist = list?.sublists.find(\n      (sublistData) => sublistData.sublistId === dataElement.sublistId\n    );\n    let todo;\n    if (sublist) {\n      todo = sublist.todos.find(\n        (todoData) => todoData.todoId === dataElement.todoId\n      );\n    } else if (list) {\n      todo = list.todos.find(\n        (todoData) => todoData.todoId === dataElement.todoId\n      );\n    }\n    const subtask = todo?.checklist.find(\n      (subtaskData) => subtaskData.subtaskId === dataElement.subtaskId\n    );\n\n    // delete element from model and save\n    if (subtask) {\n      const index = todo.checklist.findIndex(\n        (subtaskData) => subtaskData.subtaskId === subtask.subtaskId\n      );\n      todo.checklist.splice(index, 1);\n    } else if (sublist) {\n      const index = sublist.todos.findIndex(\n        (todoData) => todoData.todoId === todo.todoId\n      );\n      sublist.todos.splice(index, 1);\n    } else if (list) {\n      const index = list.todos.findIndex(\n        (todoData) => todoData.todoId === todo.todoId\n      );\n      list.todos.splice(index, 1);\n    }\n    this.saveToLocalStorage();\n  }\n}\n\n// FOR DEMO PURPOSE ONLY - WILL DELETE\nconst demoData = [\n  {\n    listId: 'list-1',\n    name: 'Todo List Project',\n    isOpen: false,\n    todos: [\n      {\n        listId: 'list-1',\n        sublistId: null,\n        todoId: 'todo-1',\n        name: 'hover between tasks to add task',\n        type: 'task',\n        isDetailsOpen: false,\n        isScheduleOpen: false,\n        isCompleted: false,\n        schedule: [\n          {\n            sessionId: 'session-1',\n            startDate: '2025-02-11',\n            startTime: null,\n            endDate: '2025-02-11',\n            endTime: null,\n            isLogged: false,\n            isPast: false,\n          },\n        ],\n        nextSession: '2025-02-11',\n        checklist: [\n          {\n            subtaskId: 'subtask-1',\n            name: 'can complete tasks',\n            isCompleted: false,\n          },\n          {\n            subtaskId: 'subtask-2',\n            name: 'can delete tasks',\n            isCompleted: false,\n          },\n          {\n            subtaskId: 'subtask-3',\n            name: 'cannot duplicate tasks',\n            isCompleted: false,\n          },\n        ],\n        notes: null,\n      },\n      {\n        listId: 'list-1',\n        sublistId: null,\n        todoId: 'todo-2',\n        name: 'click the arrow to add date',\n        type: 'task',\n        isDetailsOpen: false,\n        isScheduleOpen: false,\n        isCompleted: false,\n        schedule: [],\n        nextSession: '',\n        checklist: [\n          {\n            name: 'click the \"schedule\" button',\n            subtaskId: 'subtask-4',\n            isCompleted: false,\n          },\n          {\n            name: '(lower left hand corner)',\n            subtaskId: 'subtask-5',\n            isCompleted: false,\n          },\n          {\n            name: 'click on month and year to adjust',\n            subtaskId: 'subtask-6',\n            isCompleted: false,\n          },\n        ],\n        notes: '',\n      },\n    ],\n    sublists: [\n      {\n        sublistId: 'sublist-1',\n        name: 'Click to open sublist',\n        isOpen: false,\n        todos: [\n          {\n            listId: 'list-1',\n            sublistId: 'sublist-1',\n            todoId: 'todo-3',\n            name: 'cannot add new (sub)lists',\n            type: 'task',\n            isDetailsOpen: false,\n            isScheduleOpen: false,\n            isCompleted: false,\n            schedule: [\n              {\n                sessionId: 'session-2',\n                startDate: '2025-02-11',\n                startTime: null,\n                endDate: '2025-02-11',\n                endTime: null,\n                isLogged: false,\n                isPast: false,\n              },\n            ],\n            nextSession: '2025-02-11',\n            checklist: [],\n            notes: '',\n          },\n          {\n            listId: 'list-1',\n            sublistId: 'sublist-1',\n            todoId: 'todo-4',\n            name: 'can edit (sub)list name',\n            type: 'task',\n            isDetailsOpen: false,\n            isScheduleOpen: false,\n            isCompleted: false,\n            schedule: [],\n            nextSession: null,\n            checklist: [],\n            notes: '',\n          },\n        ],\n      },\n      {\n        sublistId: 'sublist-2',\n        name: 'Details',\n        isOpen: false,\n        todos: [\n          {\n            listId: 'list-1',\n            sublistId: 'sublist-2',\n            todoId: 'todo-5',\n            name: 'can add details',\n            type: 'task',\n            isDetailsOpen: false,\n            isScheduleOpen: false,\n            isCompleted: false,\n            schedule: [],\n            nextSession: null,\n            checklist: [\n              {\n                name: 'can add subtasks',\n                subtaskId: 'subtask-7',\n                isCompleted: false,\n              },\n              {\n                name: 'can complete subtasks',\n                subtaskId: 'subtask-8',\n                isCompleted: false,\n              },\n              {\n                name: 'can delete subtasks',\n                subtaskId: 'subtask-9',\n                isCompleted: false,\n              },\n            ],\n            notes: 'can add notes!',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    listId: 'list-2',\n    name: 'The Odin Project JavaScript',\n    isOpen: false,\n    todos: [\n      {\n        listId: 'list-2',\n        sublistId: null,\n        todoId: 'todo-6',\n        name: 'dynamic UI interactions',\n        type: 'task',\n        isDetailsOpen: false,\n        isScheduleOpen: false,\n        isCompleted: false,\n        schedule: [],\n        nextSession: null,\n        checklist: [\n          {\n            subtaskId: 'subtask-10',\n            name: 'drop down menus',\n            type: 'subtask',\n            isCompleted: false,\n          },\n          {\n            subtaskId: 'subtask-11',\n            name: 'image carousels',\n            type: 'subtask',\n            isCompleted: false,\n          },\n        ],\n        notes:\n          'https://www.theodinproject.com/lessons/node-path-javascript-dynamic-user-interface-interactions',\n      },\n    ],\n    sublists: [],\n  },\n];\n","/* eslint-disable import/extensions */\n/* eslint-disable no-console */\n\nimport ListView from '../view/list-view.js';\nimport TodoModeller from '../model/todo-model.js';\nimport { TodoData, SubtaskData } from '../model/item-classes.js';\n\nexport default class TodoPanelController {\n  constructor(userInstance) {\n    this.userInstance = userInstance;\n    this.todoModeller = new TodoModeller(userInstance.storedLists, this);\n    this.todoModel = this.todoModeller.todoModel;\n    this.listView = new ListView(this.todoModeller, this);\n  }\n\n  savetoLocalStorage() {\n    this.userInstance.storedLists = this.todoModel;\n    localStorage.setItem(this.userInstance.email, this.userInstance);\n  }\n\n  static getIDsFromElement(element) {\n    if (\n      element.classList.contains('editing-list-title') ||\n      element.classList.contains('title')\n    ) {\n      const listId = element.closest('.list').getAttribute('data-list-id');\n      const sublistId = element\n        .closest('.sublist')\n        ?.getAttribute('data-sublist-id');\n      return { listId, sublistId };\n    }\n    const listId = element.closest('.todo').getAttribute('data-list-id');\n    const sublistId = element.closest('.todo').getAttribute('data-sublist-id');\n    const todoId = element.closest('.todo').getAttribute('data-todo-id');\n    const subtaskId = element\n      .closest('.subtask')\n      ?.getAttribute('data-subtask-id');\n    return {\n      listId,\n      sublistId,\n      todoId,\n      subtaskId,\n    };\n  }\n\n  getTodoData(element) {\n    const ids = TodoPanelController.getIDsFromElement(element);\n    const listData = this.todoModel.find((list) => list.listId === ids.listId);\n    if (ids.sublistId && ids.sublistId !== 'null') {\n      if (ids.todoId && ids.todoId !== 'null') {\n        const todoData = listData.sublists\n          .find((sublist) => sublist.sublistId === ids.sublistId)\n          .todos.find((todo) => todo.todoId === ids.todoId);\n        if (ids.subtaskId && ids.subtaskId !== 'null') {\n          return todoData.find(\n            (subtask) => todoData.checklist.subtaskId === subtask.subtaskId\n          );\n        }\n        return todoData;\n      }\n      return listData.sublists.find(\n        (sublist) => sublist.sublistId === ids.sublistId\n      );\n    }\n    const todoData = listData.todos.find((todo) => todo.todoId === ids.todoId);\n    if (ids.subtaskId && ids.subtaskId !== 'null') {\n      return todoData.find(\n        (subtask) => todoData.checklist.subtaskId === subtask.subtaskId\n      );\n    }\n    return todoData;\n  }\n\n  handleInputChange(event) {\n    if (!['INPUT', 'TEXTAREA'].includes(event.target.tagName)) return;\n    if (!event.target.classList.contains('blank')) {\n      const ids = TodoPanelController.getIDsFromElement(event.target);\n      this.todoModeller.updateFieldInModelAndStore(\n        ids.listId,\n        ids.sublistId,\n        ids.todoId,\n        ids.subtaskId,\n        event.target.getAttribute('data-field'),\n        event.target.value\n      );\n    }\n  }\n\n  appendToMiddleOfModelAndReturnBlankTodo(priorTodo) {\n    const priorIds = TodoPanelController.getIDsFromElement(priorTodo);\n    const newTodo = new TodoData({\n      listId: priorIds.listId,\n      sublistId: priorIds.sublistId,\n    });\n    // get place in todoModel\n    const listData = this.todoModel.find(\n      (list) => list.listId === priorIds.listId\n    );\n    if (priorIds.sublistId !== 'null') {\n      const sublistData = listData.sublists.find(\n        (sublist) => sublist.sublistId === priorIds.sublistId\n      );\n      const priorTodoIndex = sublistData.todos.findIndex(\n        (todo) => todo.todoId === priorIds.todoId\n      );\n      sublistData.todos.splice(priorTodoIndex + 1, 0, newTodo);\n    } else if (priorIds.listId) {\n      const priorTodoIndex = listData.todos.findIndex(\n        (todo) => todo.todoId === priorIds.todoId\n      );\n      listData.todos.splice(priorTodoIndex + 1, 0, newTodo);\n    }\n    this.todoModeller.saveToLocalStorage();\n    return newTodo;\n  }\n\n  appendToStartOfListAndReturnBlankTodo(firstTodoELement) {\n    const ids = TodoPanelController.getIDsFromElement(firstTodoELement);\n    const newTodo = new TodoData({\n      listId: ids.listId,\n      sublistId: ids.sublistId,\n    });\n    const listData = this.todoModel.find((list) => list.listId === ids.listId);\n    if (ids.sublistId !== 'null') {\n      const sublistData = listData.sublists.find(\n        (sublist) => sublist.sublistId === ids.sublistId\n      );\n      sublistData.todos.unshift(newTodo);\n    } else if (ids.listId) {\n      listData.todos.unshift(newTodo);\n    }\n    this.todoModeller.saveToLocalStorage();\n    return newTodo;\n  }\n\n  addAndReturnNewSubtask(event) {\n    const ids = TodoPanelController.getIDsFromElement(event.target);\n    const newSubtask = new SubtaskData({\n      name: event.target.value,\n    });\n    const listData = this.todoModel.find((list) => list.listId === ids.listId);\n    if (ids.sublistId !== null && ids.sublistId !== 'null') {\n      const sublistData = listData.sublists.find(\n        (sublist) => sublist.sublistId === ids.sublistId\n      );\n      const todoData = sublistData.todos.find(\n        (todo) => todo.todoId === ids.todoId\n      );\n      todoData.checklist.push(newSubtask);\n    } else if (ids.listId) {\n      const todoData = listData.todos.find(\n        (todo) => todo.todoId === ids.todoId\n      );\n      todoData.checklist.push(newSubtask);\n    }\n    this.todoModeller.saveToLocalStorage();\n    return newSubtask;\n  }\n\n  handleSubtaskDelete(event) {\n    const ids = TodoPanelController.getIDsFromElement(event.target);\n    const listData = this.todoModel.find((list) => list.listId === ids.listId);\n    let todoData;\n    if (ids.sublistId !== 'null') {\n      const sublistData = listData.sublists.find(\n        (sublist) => sublist.sublistId === ids.sublistId\n      );\n      todoData = sublistData.todos.find((todo) => todo.todoId === ids.todoId);\n    } else {\n      todoData = listData.todos.find((todo) => todo.todoId === ids.todoId);\n    }\n    const subtaskIndex = todoData.checklist.findIndex(\n      (subtask) => subtask.subtaskId === ids.subtaskId\n    );\n    todoData.checklist.splice(subtaskIndex, 1);\n    this.todoModeller.saveToLocalStorage();\n    console.log(event.target);\n    event.target.closest('.subtask').remove();\n  }\n}\n","/* eslint-disable import/extensions */\nimport './styles.css';\nimport mainPageContents from './components/main-page.html';\nimport TodoPanelController from './controller/todo-panel-control.js';\n\nclass User {\n  constructor(email, password) {\n    this.email = email;\n    this.password = password;\n  }\n\n  storedLists = [\n    {\n      listId: 'list-1',\n      name: 'Todo List Project',\n      isOpen: false,\n      todos: [\n        {\n          listId: 'list-1',\n          sublistId: null,\n          todoId: 'todo-1',\n          name: 'hover between tasks to add task',\n          type: 'task',\n          isDetailsOpen: false,\n          isScheduleOpen: false,\n          isCompleted: false,\n          schedule: [\n            {\n              sessionId: 'session-1',\n              startDate: '2025-02-11',\n              startTime: null,\n              endDate: '2025-02-11',\n              endTime: null,\n              isLogged: false,\n              isPast: false,\n            },\n          ],\n          nextSession: '2025-02-11',\n          checklist: [\n            {\n              subtaskId: 'subtask-1',\n              name: 'can complete tasks',\n              isCompleted: false,\n            },\n            {\n              subtaskId: 'subtask-2',\n              name: 'can delete tasks',\n              isCompleted: false,\n            },\n            {\n              subtaskId: 'subtask-3',\n              name: 'cannot duplicate tasks',\n              isCompleted: false,\n            },\n          ],\n          notes: null,\n        },\n        {\n          listId: 'list-1',\n          sublistId: null,\n          todoId: 'todo-2',\n          name: 'click the arrow to add date',\n          type: 'task',\n          isDetailsOpen: false,\n          isScheduleOpen: false,\n          isCompleted: false,\n          schedule: [],\n          nextSession: '',\n          checklist: [\n            {\n              name: 'click the \"schedule\" button',\n              subtaskId: 'subtask-4',\n              isCompleted: false,\n            },\n            {\n              name: '(lower left hand corner)',\n              subtaskId: 'subtask-5',\n              isCompleted: false,\n            },\n            {\n              name: 'click on month and year to adjust',\n              subtaskId: 'subtask-6',\n              isCompleted: false,\n            },\n          ],\n          notes: '',\n        },\n      ],\n      sublists: [\n        {\n          sublistId: 'sublist-1',\n          name: 'Click to open sublist',\n          isOpen: false,\n          todos: [\n            {\n              listId: 'list-1',\n              sublistId: 'sublist-1',\n              todoId: 'todo-3',\n              name: 'cannot add new (sub)lists',\n              type: 'task',\n              isDetailsOpen: false,\n              isScheduleOpen: false,\n              isCompleted: false,\n              schedule: [\n                {\n                  sessionId: 'session-2',\n                  startDate: '2025-02-11',\n                  startTime: null,\n                  endDate: '2025-02-11',\n                  endTime: null,\n                  isLogged: false,\n                  isPast: false,\n                },\n              ],\n              nextSession: '2025-02-11',\n              checklist: [],\n              notes: '',\n            },\n            {\n              listId: 'list-1',\n              sublistId: 'sublist-1',\n              todoId: 'todo-4',\n              name: 'can edit (sub)list name',\n              type: 'task',\n              isDetailsOpen: false,\n              isScheduleOpen: false,\n              isCompleted: false,\n              schedule: [],\n              nextSession: null,\n              checklist: [],\n              notes: '',\n            },\n          ],\n        },\n        {\n          sublistId: 'sublist-2',\n          name: 'Details',\n          isOpen: false,\n          todos: [\n            {\n              listId: 'list-1',\n              sublistId: 'sublist-2',\n              todoId: 'todo-5',\n              name: 'can add details',\n              type: 'task',\n              isDetailsOpen: false,\n              isScheduleOpen: false,\n              isCompleted: false,\n              schedule: [],\n              nextSession: null,\n              checklist: [\n                {\n                  name: 'can add subtasks',\n                  subtaskId: 'subtask-7',\n                  isCompleted: false,\n                },\n                {\n                  name: 'can complete subtasks',\n                  subtaskId: 'subtask-8',\n                  isCompleted: false,\n                },\n                {\n                  name: 'can delete subtasks',\n                  subtaskId: 'subtask-9',\n                  isCompleted: false,\n                },\n              ],\n              notes: 'can add notes!',\n            },\n          ],\n        },\n      ],\n    },\n    {\n      listId: 'list-2',\n      name: 'The Odin Project JavaScript',\n      isOpen: false,\n      todos: [\n        {\n          listId: 'list-2',\n          sublistId: null,\n          todoId: 'todo-6',\n          name: 'dynamic UI interactions',\n          type: 'task',\n          isDetailsOpen: false,\n          isScheduleOpen: false,\n          isCompleted: false,\n          schedule: [],\n          nextSession: null,\n          checklist: [\n            {\n              subtaskId: 'subtask-10',\n              name: 'drop down menus',\n              type: 'subtask',\n              isCompleted: false,\n            },\n            {\n              subtaskId: 'subtask-11',\n              name: 'image carousels',\n              type: 'subtask',\n              isCompleted: false,\n            },\n          ],\n          notes:\n            'https://www.theodinproject.com/lessons/node-path-javascript-dynamic-user-interface-interactions',\n        },\n      ],\n      sublists: [],\n    },\n  ];\n}\n\nconst init = () => {\n  // LOGIN WITH EXISTING ACCOUNT FORM\n  const loginForm = document.querySelector('#login-form');\n  const email = loginForm.querySelector('input[type=email]');\n  const emailError = loginForm.querySelector('.input-container').children[1];\n  const password = loginForm.querySelector('input[type=password]');\n  const passwordError = loginForm.querySelector('.input-container').children[3];\n  const submitButton = loginForm.querySelector('#submit-existing-login');\n\n  loginForm.addEventListener('input', () => {\n    if (email.validity.valueMissing) {\n      emailError.textContent = 'Email required';\n      emailError.classList.remove('hidden');\n    } else if (password.validity.valueMissing) {\n      passwordError.textContent = 'Password required';\n      passwordError.classList.remove('hidden');\n    } else {\n      submitButton.removeAttribute('disabled');\n    }\n  });\n\n  loginForm.addEventListener('submit', () => {\n    const id = email.value.toLowerCase();\n    const storedData = JSON.parse(localStorage.getItem(id)) || null;\n    if (storedData.email === id && storedData.password === password.value) {\n      document.querySelector('body').innerHTML = mainPageContents;\n      // eslint-disable-next-line no-new\n      new TodoPanelController(storedData);\n    } else if (storedData === null) {\n      email.error.textContent = 'Email not found';\n      email.error.classList.remove('hidden');\n    } else if (\n      storedData.email === id &&\n      storedData.password !== password.value\n    ) {\n      passwordError.textContent = 'Wrong password';\n      passwordError.classList.remove('hidden');\n    }\n  });\n\n  // LOGIN WITH NEW ACCOUNT FORM\n  const signupForm = document.querySelector('#signup-form');\n  const submitNewLoginButton = signupForm.querySelector('#submit-new-login');\n\n  const name = signupForm.querySelector('input[type=text]');\n  const nameError = signupForm.querySelector('input-container').children[1];\n  name.addEventListener('input', () => {\n    if (name.validity.valueMissing) {\n      nameError.classList.remove('hidden');\n      name.validity.valid = false;\n    } else {\n      name.validity.valid = true;\n    }\n  });\n\n  const newEmail = signupForm.querySelector('input[type=email]');\n  const newEmailError =\n    signupForm.querySelector('.input-container').children[3];\n  newEmail.addEventListener('input', () => {\n    if (!newEmail.validity.valid) {\n      newEmailError.classList.remove('hidden');\n      newEmail.validity.valid = false;\n    } else {\n      newEmail.validity.valid = true;\n    }\n  });\n\n  const newPassword = signupForm.querySelector('input[type=password]');\n  const passwordShortError =\n    signupForm.querySelector('.input-container').children[5];\n  const passwordNumberError =\n    signupForm.querySelector('.input-container').children[6];\n  const passwordLetterError =\n    signupForm.querySelector('.input-container').children[7];\n  newPassword.addEventListener('input', () => {\n    if (newPassword.length < 6) {\n      passwordShortError.classList.remove('hidden');\n    }\n    if (!/\\d/.test(newPassword.value)) {\n      passwordNumberError.classList.remove('hidden');\n    }\n    if (!/[a-zA-Z]/.test(newPassword.value)) {\n      passwordLetterError.classList.remove('hidden');\n    }\n    if (\n      newPassword.length > 5 &&\n      /\\d/.test(newPassword.value) &&\n      /[a-zA-Z]/.test(newPassword.value)\n    ) {\n      newPassword.validity.valid = true;\n    }\n  });\n\n  const newPasswordConfirmation = signupForm.querySelector('.confirm');\n  const newPasswordConfirmationError =\n    signupForm.querySelector('.input-container').children[9];\n  newPasswordConfirmation.addEventListener('input', () => {\n    if (newPasswordConfirmation.value !== newPassword.value) {\n      newPasswordConfirmationError.classList.remove('hidden');\n      newPasswordConfirmation.validity.valid = false;\n    } else {\n      newPasswordConfirmation.validity.valid = true;\n    }\n  });\n\n  if (\n    name.validity.valid &&\n    newEmail.validity.valid &&\n    newPassword.validity.valid &&\n    newPasswordConfirmation.validity.valid\n  ) {\n    submitNewLoginButton.removeAttribute('disabled');\n  }\n\n  signupForm.addEventListener('submit', () => {\n    // eslint-disable-next-line no-new\n    const controller = new TodoPanelController(\n      new User(email.value.toLowerCase(), password.value)\n    );\n    controller.saveToLocalStorage();\n  });\n};\n\ninit();\n\n// function updateClock() {\n//   const now = new Date();\n//   const hours = now.getHours();\n//   const minutes = now.getMinutes();\n//   const seconds = now.getSeconds();\n\n//   requestAnimationFrame(updateClock); // Keep updating\n// }\n\n// updateClock();\n"],"names":[],"sourceRoot":""}